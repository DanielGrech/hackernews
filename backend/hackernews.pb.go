// Code generated by protoc-gen-go.
// source: hackernews.proto
// DO NOT EDIT!

/*
Package hackernews is a generated protocol buffer package.

It is generated from these files:
	hackernews.proto

It has these top-level messages:
	PbStoryList
	PbStory
	PbComment
	PbIds
*/
package hackernews

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PbStoryList struct {
	Stories          []*PbStory `protobuf:"bytes,1,rep,name=stories" json:"stories,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *PbStoryList) Reset()         { *m = PbStoryList{} }
func (m *PbStoryList) String() string { return proto.CompactTextString(m) }
func (*PbStoryList) ProtoMessage()    {}

func (m *PbStoryList) GetStories() []*PbStory {
	if m != nil {
		return m.Stories
	}
	return nil
}

type PbStory struct {
	Id               *int64       `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Author           *string      `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	ParentId         *int64       `protobuf:"varint,3,opt,name=parent_id" json:"parent_id,omitempty"`
	CommentIds       []int64      `protobuf:"varint,4,rep,packed,name=comment_ids" json:"comment_ids,omitempty"`
	Score            *int32       `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	Time             *int64       `protobuf:"varint,6,req,name=time" json:"time,omitempty"`
	Title            *string      `protobuf:"bytes,7,opt,name=title" json:"title,omitempty"`
	Text             *string      `protobuf:"bytes,8,opt,name=text" json:"text,omitempty"`
	Type             *string      `protobuf:"bytes,9,req,name=type" json:"type,omitempty"`
	Url              *string      `protobuf:"bytes,10,opt,name=url" json:"url,omitempty"`
	Parts            []int64      `protobuf:"varint,11,rep,packed,name=parts" json:"parts,omitempty"`
	CommentCount     *int32       `protobuf:"varint,12,opt,name=comment_count" json:"comment_count,omitempty"`
	Comments         []*PbComment `protobuf:"bytes,13,rep,name=comments" json:"comments,omitempty"`
	Deleted          *bool        `protobuf:"varint,14,opt,name=deleted" json:"deleted,omitempty"`
	Dead             *bool        `protobuf:"varint,15,opt,name=dead" json:"dead,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PbStory) Reset()         { *m = PbStory{} }
func (m *PbStory) String() string { return proto.CompactTextString(m) }
func (*PbStory) ProtoMessage()    {}

func (m *PbStory) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PbStory) GetAuthor() string {
	if m != nil && m.Author != nil {
		return *m.Author
	}
	return ""
}

func (m *PbStory) GetParentId() int64 {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return 0
}

func (m *PbStory) GetCommentIds() []int64 {
	if m != nil {
		return m.CommentIds
	}
	return nil
}

func (m *PbStory) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *PbStory) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *PbStory) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *PbStory) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *PbStory) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *PbStory) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *PbStory) GetParts() []int64 {
	if m != nil {
		return m.Parts
	}
	return nil
}

func (m *PbStory) GetCommentCount() int32 {
	if m != nil && m.CommentCount != nil {
		return *m.CommentCount
	}
	return 0
}

func (m *PbStory) GetComments() []*PbComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *PbStory) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return false
}

func (m *PbStory) GetDead() bool {
	if m != nil && m.Dead != nil {
		return *m.Dead
	}
	return false
}

type PbComment struct {
	Id               *int64       `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Author           *string      `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	ParentId         *int64       `protobuf:"varint,3,opt,name=parent_id" json:"parent_id,omitempty"`
	Time             *int64       `protobuf:"varint,4,req,name=time" json:"time,omitempty"`
	Text             *string      `protobuf:"bytes,5,opt,name=text" json:"text,omitempty"`
	CommentIds       []int64      `protobuf:"varint,6,rep,packed,name=comment_ids" json:"comment_ids,omitempty"`
	CommentCount     *int32       `protobuf:"varint,7,opt,name=comment_count" json:"comment_count,omitempty"`
	Comments         []*PbComment `protobuf:"bytes,8,rep,name=comments" json:"comments,omitempty"`
	Deleted          *bool        `protobuf:"varint,9,opt,name=deleted" json:"deleted,omitempty"`
	Dead             *bool        `protobuf:"varint,10,opt,name=dead" json:"dead,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PbComment) Reset()         { *m = PbComment{} }
func (m *PbComment) String() string { return proto.CompactTextString(m) }
func (*PbComment) ProtoMessage()    {}

func (m *PbComment) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PbComment) GetAuthor() string {
	if m != nil && m.Author != nil {
		return *m.Author
	}
	return ""
}

func (m *PbComment) GetParentId() int64 {
	if m != nil && m.ParentId != nil {
		return *m.ParentId
	}
	return 0
}

func (m *PbComment) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *PbComment) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *PbComment) GetCommentIds() []int64 {
	if m != nil {
		return m.CommentIds
	}
	return nil
}

func (m *PbComment) GetCommentCount() int32 {
	if m != nil && m.CommentCount != nil {
		return *m.CommentCount
	}
	return 0
}

func (m *PbComment) GetComments() []*PbComment {
	if m != nil {
		return m.Comments
	}
	return nil
}

func (m *PbComment) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return false
}

func (m *PbComment) GetDead() bool {
	if m != nil && m.Dead != nil {
		return *m.Dead
	}
	return false
}

type PbIds struct {
	Ids              []int64 `protobuf:"varint,1,rep,name=ids" json:"ids,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PbIds) Reset()         { *m = PbIds{} }
func (m *PbIds) String() string { return proto.CompactTextString(m) }
func (*PbIds) ProtoMessage()    {}

func (m *PbIds) GetIds() []int64 {
	if m != nil {
		return m.Ids
	}
	return nil
}
