// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./hackernews.proto
package hackernews;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Datatype.INT64;
import static com.squareup.wire.Message.Label.REPEATED;

public final class PbIds extends Message {
  private static final long serialVersionUID = 0L;

  public static final List<Long> DEFAULT_IDS = Collections.emptyList();

  @ProtoField(tag = 1, type = INT64, label = REPEATED)
  public final List<Long> ids;

  public PbIds(List<Long> ids) {
    this.ids = immutableCopyOf(ids);
  }

  private PbIds(Builder builder) {
    this(builder.ids);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PbIds)) return false;
    return equals(ids, ((PbIds) other).ids);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = ids != null ? ids.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<PbIds> {

    public List<Long> ids;

    public Builder() {
    }

    public Builder(PbIds message) {
      super(message);
      if (message == null) return;
      this.ids = copyOf(message.ids);
    }

    public Builder ids(List<Long> ids) {
      this.ids = checkForNulls(ids);
      return this;
    }

    @Override
    public PbIds build() {
      return new PbIds(this);
    }
  }
}
