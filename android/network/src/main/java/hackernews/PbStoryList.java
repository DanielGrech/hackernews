// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./hackernews.proto
package hackernews;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;
import java.util.Collections;
import java.util.List;

import static com.squareup.wire.Message.Label.REPEATED;

public final class PbStoryList extends Message {
  private static final long serialVersionUID = 0L;

  public static final List<PbStory> DEFAULT_STORIES = Collections.emptyList();

  @ProtoField(tag = 1, label = REPEATED, messageType = PbStory.class)
  public final List<PbStory> stories;

  public PbStoryList(List<PbStory> stories) {
    this.stories = immutableCopyOf(stories);
  }

  private PbStoryList(Builder builder) {
    this(builder.stories);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PbStoryList)) return false;
    return equals(stories, ((PbStoryList) other).stories);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    return result != 0 ? result : (hashCode = stories != null ? stories.hashCode() : 1);
  }

  public static final class Builder extends Message.Builder<PbStoryList> {

    public List<PbStory> stories;

    public Builder() {
    }

    public Builder(PbStoryList message) {
      super(message);
      if (message == null) return;
      this.stories = copyOf(message.stories);
    }

    public Builder stories(List<PbStory> stories) {
      this.stories = checkForNulls(stories);
      return this;
    }

    @Override
    public PbStoryList build() {
      return new PbStoryList(this);
    }
  }
}
